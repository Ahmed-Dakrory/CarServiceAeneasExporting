<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui">

<ui:composition template="/templates/dashboard2.xhtml">


	<ui:define name="title"> Aeneas Exporting LLC</ui:define>


<ui:define name="mainHead"> 
			       <ul class="mn-sub"><li class="mn-sub-item mn-item-vendors"><a href="vitView.jsf" class="mn-sub-item-current"><b>Vehicle List</b></a></li></ul>
           <link rel="stylesheet" href="#{resource['css:dashboardPrime/all.min.css']}" />
		<link rel="stylesheet" href="#{resource['css:dashboardPrime/bootstrap.min.css']}" />
		
			</ui:define>
			
			
	<ui:define name="content">
	<style>
	table {
    border-collapse: inherit;
    /* border-spacing: 0; */
    /* border-radius: 11px; */
}

.aForHead{
color:white;
}


.aForHead:hover{
color:#ffec08;
}
	</style>
	
	 <p:panel id="mainPanel" class="container">
	#{carBean.openImageLink()} 	
	 
	 <div class="row">
	 	<div class="col-md-12 text-center">
	 	<h1>360 View of the Car: #{carBean.selectedCar.uuid}</h1>
	 	</div>
	 	
 	</div>
	 <hr></hr>
	 
	 
	
		<div id="spinCarContainer" class="row mt-2">

			  	 <br></br>
			  	 
			  	 <div id="container"> <!-- Use this container to position, size or style the widget. -->
			<div class="sts-spin"> <!-- This container allows the widget's "full screen" button to work. -->
			<iframe id="spinCar" style="width: 100%;height: 751px; " />
			</div>
			</div>
		</div>
		
		<div id="spinCarContainerFalse" style="display:none;">
		 <h1 class="w-100 text-center"> No 360 View Available for this car </h1>
		</div>
		
		<h:outputScript name="js/dashboardPrime/popper.min.js"/>
		<h:outputScript name="js/dashboardPrime/bootstrap.min.js"/>
		<h:outputScript name="js/dashboardPrime/FileSaver.js"/>
		<h:outputScript name="js/dashboardPrime/jszip.js"/>
		
		
		<script>
		
		
function downloadEachImage(urlFileName){
			
			const imageUrl = '/images/?file='+urlFileName;

			// Fetch the image and parse the response stream as a blob
			const imageBlob = fetch(imageUrl).then(response => Promise.resolve(response.blob()));

			return imageBlob;
			
		}
		

function downloadEachPDF(urlFileName){
	
	const imageUrl = '/images/?file='+urlFileName+"&amp;Pdf=1";

	// Fetch the image and parse the response stream as a blob
	const imageBlob = fetch(imageUrl).then(response => Promise.resolve(response.blob()));

	return imageBlob;
	
}

function downloadAllImages(){
			
			var zip = new JSZip();
			var img = zip.folder("Images");
			<ui:repeat var="variable" value="#{carBean.images}">
			filename="#{variable}";
			imgData = downloadEachImage(filename);
			img.file(filename, imgData);
			</ui:repeat>
			zip.generateAsync({type:"blob"})
			.then(function(content) {
			    // see FileSaver.js
			    saveAs(content, "All ImagesOf freight with Vin #{carBean.selectedCar.uuid}.zip");
			});

		}
		
		
		
		
function downloadAllDocs(){
	
	var zip = new JSZip();
	var img = zip.folder("Docs");
	<ui:repeat var="variable" value="#{carBean.docs}">
	filename="#{variable}";
	imgData = downloadEachImage(filename);
	img.file(filename, imgData);
	</ui:repeat>
	zip.generateAsync({type:"blob"})
	.then(function(content) {
	    // see FileSaver.js
	    saveAs(content, "All Documents Of freight with Vin #{carBean.selectedCar.uuid}.zip");
	});

}
	

function downloadAllPDFDocs(){
	
	var zip = new JSZip();
	var img = zip.folder("PDFs");
	<ui:repeat var="variable" value="#{carBean.pdfs}">
	filename="#{variable}";
	imgData = downloadEachPDF(filename);
	img.file(filename, imgData);
	</ui:repeat>
	zip.generateAsync({type:"blob"})
	.then(function(content) {
	    // see FileSaver.js
	    saveAs(content, "All PDF Of freight with Vin #{carBean.selectedCar.uuid}.zip");
	});

}
		
		function downloadAllFiles(){
			var zip = new JSZip();
			
			
			var img = zip.folder("Images");
			<ui:repeat var="variable" value="#{carBean.images}">
			filename="#{variable}";
			imgData = downloadEachImage(filename);
			img.file(filename, imgData);
			</ui:repeat>
			
			
			var img = zip.folder("Docs");
			<ui:repeat var="variable" value="#{carBean.docs}">
			filename="#{variable}";
			imgData = downloadEachImage(filename);
			img.file(filename, imgData);
			</ui:repeat>
			
			
			var img = zip.folder("PDFs");
			<ui:repeat var="variable" value="#{carBean.pdfs}">
			filename="#{variable}";
			imgData = downloadEachPDF(filename);
			img.file(filename, imgData);
			</ui:repeat>
			
			
			zip.generateAsync({type:"blob"})
			.then(function(content) {
			    // see FileSaver.js
			    saveAs(content, "#{carBean.selectedCar.uuid}.zip");
			});
			
		}
		</script>
		
		
		
		 <script>
     $.ajax({
         url: "https://find-spin-api.spincar.com/provider-api/smartopal/aeneasexport.com/#{carBean.selectedCar.uuid}?auth=524491e15e7340e6f3963a14988a846d0b2e99f4ef024386d77590f389b4403ab424b06d317a29f4b8bc7e92f78897244faa0120d3e8d1d0bbc4ba17fede1da2",
         type: "GET",
         datatype: 'json',
         success: function( data, status, xhttp) {
              // data will be true or false if you returned a json bool
              if(data.status=="ok"){
            	  console.log(data.vehicle.url);
            	  
            	  var $iframe = $('#spinCar');
            	    if ($iframe.length) {
            	        $iframe.attr('src',data.vehicle.url);
            	    }
            	    
              }else{
            	  $('#spinCarContainer').hide();
            	  $('#spinCarContainerFalse').show();
              }
              
         },
         async: false // this is generally bad, it will lock up your browser while it returns, but the only way to fit it into your pattern.
     });
     </script>
		<!-- End of All Images -->
	 </p:panel>
     
     
     
     
     
		
	</ui:define>
	
		
	
</ui:composition>
</html>
